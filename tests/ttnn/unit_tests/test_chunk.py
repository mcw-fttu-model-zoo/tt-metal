# SPDX-FileCopyrightText: Â© 2025 Tenstorrent Inc.

# SPDX-License-Identifier: Apache-2.0


import pytest
import torch
import ttnn
from tests.ttnn.utils_for_testing import assert_with_pcc


@pytest.mark.parametrize(
    "input_tensor, num_chunks, dim",
    [
        (list(range(50)), 7, 0),
        (list(range(200)), 1, 0),
        (torch.arange(12).reshape([4, 3]), 5, 0),
        (torch.arange(24).reshape([2, 4, 3]), 2, 0),
        (torch.arange(24).reshape([2, 4, 3]), 2, 1),
        (torch.arange(48).reshape([2, 3, 4, 2]), 4, 2),
        (torch.arange(8).reshape([2, 2, 2]), 2, 0),
        (torch.arange(10).reshape([10, 1, 1]), 5, 0),
        (torch.arange(192).reshape([2, 3, 4, 4, 2]), 5, 3),
        ([[[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]]], 3, 2),
        (
            [
                [
                    [[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]],
                    [[[[17, 18], [19, 20]], [[21, 22], [23, 24]]], [[[25, 26], [27, 28]], [[29, 30], [31, 32]]]],
                ]
            ],
            5,
            4,
        ),
        (
            [
                [
                    [
                        [[[5, 6], [7, 8]], [[9, 10], [11, 12]]],
                        [[[13, 14], [15, 16]], [[17, 18], [19, 20]]],
                        [[[21, 22], [23, 24]], [[25, 26], [27, 28]]],
                        [[[29, 30], [31, 32]], [[33, 34], [35, 36]]],
                    ]
                ]
            ],
            5,
            2,
        ),
        (
            [
                [
                    [
                        [[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]],
                        [[[13, 14, 15], [16, 17, 18]], [[19, 20, 21], [22, 23, 24]]],
                        [[[25, 26, 27], [28, 29, 30]], [[31, 32, 33], [34, 35, 36]]],
                    ]
                ]
            ],
            5,
            3,
        ),
        (
            [
                [
                    [
                        [[[1, 3, 5, 7], [9, 11, 13, 15]], [[17, 19, 21, 23], [25, 27, 29, 31]]],
                        [[[33, 35, 37, 39], [41, 43, 45, 47]], [[49, 51, 53, 55], [57, 59, 61, 63]]],
                        [[[65, 67, 69, 71], [73, 75, 77, 79]], [[81, 83, 85, 87], [89, 91, 93, 95]]],
                    ]
                ]
            ],
            5,
            4,
        ),
        (
            [
                [
                    [
                        [[[2, 4], [6, 8]], [[10, 12], [14, 16]]],
                        [[[18, 20], [22, 24]], [[26, 28], [30, 32]]],
                        [[[34, 36], [38, 40]], [[42, 44], [46, 48]]],
                        [[[50, 52], [54, 56]], [[58, 60], [62, 64]]],
                    ]
                ]
            ],
            5,
            2,
        ),
        (
            [
                [
                    [
                        [[[10, 20], [30, 40]], [[50, 60], [70, 80]]],
                        [[[90, 100], [110, 120]], [[130, 140], [150, 160]]],
                        [[[170, 180], [190, 200]], [[210, 220], [230, 240]]],
                    ]
                ]
            ],
            5,
            3,
        ),
        (
            [
                [
                    [
                        [[[10, 20], [30, 40]], [[50, 60], [70, 80]]],
                        [[[90, 100], [110, 120]], [[130, 140], [150, 160]]],
                        [[[170, 180], [190, 200]], [[210, 220], [230, 240]]],
                    ]
                ]
            ],
            5,
            3,
        ),
        (
            [
                [
                    [
                        [[[10, 20], [30, 40]], [[50, 60], [70, 80]]],
                        [[[90, 100], [110, 120]], [[130, 140], [150, 160]]],
                        [[[170, 180], [190, 200]], [[210, 220], [230, 240]]],
                    ]
                ]
            ],
            5,
            4,
        ),
        (
            [
                [
                    [
                        [[[10, 20], [30, 40]], [[50, 60], [70, 80]]],
                        [[[90, 100], [110, 120]], [[130, 140], [150, 160]]],
                        [[[170, 180], [190, 200]], [[210, 220], [230, 240]]],
                    ]
                ]
            ],
            5,
            4,
        ),
    ],
)
def test_custom_chunk(device, input_tensor, num_chunks, dim):
    tensor = torch.tensor(input_tensor, dtype=torch.int32)
    ttnn_tensor = ttnn.from_torch(tensor)

    ttnn_tensor = ttnn.to_device(ttnn_tensor, device, memory_config=ttnn.L1_MEMORY_CONFIG)

    torch_chunks = torch.chunk(tensor, num_chunks, dim)
    ttnn_chunks = ttnn.chunk(ttnn_tensor, num_chunks, dim)

    ttnn_chunks_torch = [ttnn.to_torch(chunk) for chunk in ttnn_chunks]
    assert_with_pcc(torch.cat(torch_chunks, dim=-1), torch.cat(ttnn_chunks_torch, dim=-1))
